{"version":3,"sources":["components/Flower.js","components/FlowerShop.js","App.js","reportWebVitals.js","index.js"],"names":["Flower","name","colors","scent","addToBouquet","className","map","color","type","id","value","htmlFor","onClick","event","preventDefault","flowerColors","forEach","elementId","document","getElementById","checked","push","length","headers","Accept","FlowerShop","bouquetId","bouquetName","useState","flowers","setFlowers","bouquetItems","setBouquetItems","useEffect","a","fetch","method","response","json","data","fetchFlowers","fetchBouquetItems","flowerName","body","flower","duplicate","item","JSON","stringify","bouquetData","items","console","log","removeItem","e","querySelector","classList","toggle","target","index","flowerArray","split","pop","join","colorArray","colorName","shift","toUpperCase","src","alt","_id","App","setBouquetId","setBouquetName","bouquets","setBouquets","fetchBouquets","createBouquet","style","display","alert","to","onSubmit","bouquet","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ff546f28.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Flower ({name, colors, scent, addToBouquet}) {\r\n\r\n    const submitFlowers = (event) => {\r\n        event.preventDefault();\r\n        const flowerColors = [];\r\n       \r\n        //Record which colors were selected\r\n        colors.forEach((color)=> {\r\n            const elementId = color + \"-\" + name\r\n            if(document.getElementById(elementId).checked) {\r\n                flowerColors.push(color)\r\n            }\r\n        })\r\n\r\n        //if at least one option has been checked then proceed to add to bouquet\r\n        if(flowerColors.length>0){\r\n            addToBouquet(name, flowerColors);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <div className='flower-container__item'>\r\n        <h3>{name}</h3>\r\n        <p>Scent: {scent}</p>\r\n        <form className=\"color-optionss\">\r\n            {colors.map((color)=>{\r\n                return (\r\n                    <div key={color+\"-\"+name}>\r\n                        <input type=\"checkbox\" id={color+\"-\"+name} name={name + \"-colors\"} value={color+\"-\"+name} />\r\n                        <label htmlFor={color+\"-\"+name}>{color}</label>\r\n                    </div>\r\n                )\r\n            })}\r\n            {/* <input type=\"submit\" value=\"Add to Bouquet +\"/> */}\r\n            <button onClick={submitFlowers}>Add to Bouquet +</button>\r\n        </form>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Flower;","import React, { useEffect, useState } from 'react';\r\nimport Flower from './Flower';\r\n\r\nconst headers = {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n    };\r\n\r\nfunction FlowerShop( { bouquetId, bouquetName } ) {\r\n    const [flowers, setFlowers] = useState([]);\r\n    const [bouquetItems, setBouquetItems] = useState([])\r\n\r\n    useEffect(()=> { \r\n        const fetchFlowers = async () => {\r\n            const response = await fetch('http://localhost:5000/flowers/', {\r\n                method:'GET',\r\n                headers: headers,\r\n            });\r\n            const data = await response.json();\r\n            setFlowers(data);\r\n        }\r\n        fetchFlowers();\r\n\r\n        const fetchBouquetItems = async () => {\r\n            const response = await fetch(`http://localhost:5000/bouquets/${bouquetId}`, {\r\n                method:'GET',\r\n                headers: headers,\r\n            });\r\n            const data = await response.json();\r\n            setBouquetItems(data);\r\n        }\r\n\r\n        fetchBouquetItems();\r\n    }, [bouquetItems]);\r\n\r\n    const addToBouquet = (flowerName, flowerColors) => {   \r\n        if(bouquetId){\r\n            flowerColors.forEach(async(color)=> {\r\n                const body = {\r\n                    flower: flowerName,\r\n                    color,\r\n                }\r\n\r\n                let duplicate = false;\r\n                bouquetItems.forEach(item => {\r\n                    if(item.color === color && item.flower === flowerName){\r\n                        duplicate = true;\r\n                    }\r\n                })\r\n\r\n                if(!duplicate){\r\n                    //add to bouquet\r\n                    const response = await fetch(`http://localhost:5000/bouquets/${bouquetId}`, {\r\n                        method: 'PATCH',\r\n                        headers,\r\n                        body: JSON.stringify(body),\r\n                    })\r\n\r\n                    const bouquetData = await response.json();\r\n                    setBouquetItems(bouquetData.items);\r\n                }\r\n            })\r\n        }else{\r\n            console.log(\"select a bouquet first\")\r\n        }\r\n    }\r\n\r\n    const toggleItems = (e) => {\r\n        e.preventDefault();\r\n        const bouquetItems = document.querySelector(\".bouquet-items\")\r\n        bouquetItems.classList.toggle(\"active\");\r\n        e.target.classList.toggle(\"active\");\r\n    }\r\n\r\n    const removeItem = async (flower, color) => {\r\n        if(bouquetId){\r\n            const body = {\r\n                flower,\r\n                color,\r\n            }\r\n            const response = await fetch(`http://localhost:5000/bouquets/${bouquetId}/remove`, {\r\n                method: 'PATCH',\r\n                headers,\r\n                body: JSON.stringify(body),\r\n            })\r\n            const bouquetData = await response.json();\r\n            setBouquetItems(bouquetData.items);\r\n\r\n        }else{\r\n            console.log(\"select a bouquet first\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"flower-shop\">\r\n            <h2>Select flowers to add to your {bouquetName} bouquet</h2>\r\n            <button className=\"toggle-bouquet-items\" onClick={toggleItems}>{bouquetName} items</button>\r\n            <div className=\"bouquet-items\">\r\n                { bouquetItems.length > 0 ? bouquetItems.map((item, index)=> {\r\n                    let flowerName = '';\r\n                    const flowerArray = item.flower.split('')\r\n\r\n                    if(flowerArray[flowerArray.length-1] === \"s\"){\r\n                        flowerName = item.flower\r\n                    }else if(flowerArray[flowerArray.length-1] === \"y\"){\r\n                        flowerArray.pop()\r\n                        flowerName = flowerArray.join('') + \"ies\";\r\n                    }else {\r\n                        flowerName = item.flower + \"s\" \r\n                    }\r\n                    const colorArray = item.color.split('')\r\n                    const colorLetter = colorArray.shift().toUpperCase()\r\n                    const colorName = colorLetter + colorArray.join('')\r\n                    return (\r\n                        <div className=\"bouquet-items__one\">\r\n                            <button className=\"flex-center\" onClick={()=> {removeItem(item.flower, item.color)}}><img src=\"./trash.png\" alt=\"trash icon\"/></button>\r\n                            <p>{index + 1}. {colorName} {flowerName}</p>\r\n                        </div>\r\n                    )\r\n                }) : <p>No flowers added yet!</p>}\r\n            </div>\r\n            <div className=\"flower-container\">\r\n                {flowers.map(flower => {\r\n                    return <Flower key={flower._id} {...flower} addToBouquet={addToBouquet}/>\r\n                })}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default FlowerShop;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport './App.css';\n\nimport FlowerShop from './components/FlowerShop';\n\nfunction App() {\n\n  const [bouquetId, setBouquetId] = useState(null);\n  const [bouquetName, setBouquetName] = useState(null);\n  const [bouquets, setBouquets] = useState()\n\n  const headers = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    };\n\n  useEffect(()=> { \n    const fetchBouquets = async () => {\n        const response = await fetch('http://localhost:5000/bouquets/', {\n            method:'GET',\n            headers,\n        });\n        const data = await response.json();\n        setBouquets(data);\n    }\n\n      fetchBouquets();\n  }, [bouquetId, bouquets]);\n\n  const createBouquet = async(event) => {\n    event.preventDefault();\n    \n    const bouquetName = document.getElementById(\"bouquet-name\").value;\n    //check if bouquet name already exists\n    let duplicate = false;\n    bouquets.forEach(item => {\n      if (item.name === bouquetName){\n        duplicate = true;\n      }\n    })\n\n    if(!duplicate || bouquetName !== '' || bouquetName !== ' '){\n      const body = {\n        name: bouquetName\n      }\n      const response = await fetch('http://localhost:5000/bouquets', {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(body),\n      });\n  \n      const data = await response.json();\n      console.log(\"data\", data);\n      setBouquetName(bouquetName);\n      setBouquetId(data._id)\n      document.getElementById(\"new-bouquet\").style.display = \"none\";\n    }else if(bouquetName === '' || bouquetName === ' '){\n      alert(\"Please enter a valid name for your bouquet\");\n    }else{\n      alert(\"You already have a bouquet with that name. Please name it something unique.\")\n    }\n  };\n\n  const nameBouquet = () => {\n    document.getElementById(\"new-bouquet\").style.display = \"block\";\n  }\n\n  const listBouquets = () => {\n    document.getElementById(\"bouquet-list\").style.display = \"block\";\n  }\n\n  const selectBouquet = (bouquet) => {\n    setBouquetId(bouquet._id);\n    setBouquetName(bouquet.name);\n    document.getElementById(\"bouquet-list\").style.display = \"none\";\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className='header'>\n          <h1>Alissa's Flower Shop</h1>\n        </header>\n        <main>\n          <section>\n            {bouquetId ? \n            <div>\n              <Link to=\"/add-flowers\">Click here to add flowers to your {bouquetName} bouquet!</Link>\n            </div>\n            : null}\n            <div className=\"bouquet-options\">\n              <button onClick={nameBouquet}>Create a new bouquet</button> <p>OR</p> <button onClick={listBouquets}>Select a previous bouquet to edit!</button>\n            </div>\n            <form className=\"new-bouquet\" id=\"new-bouquet\" onSubmit={createBouquet}>\n              <label htmlFor=\"bouquet-name\">Bouquet Name:</label>\n              <input type=\"text\" id=\"bouquet-name\" name=\"bouquet-name\"/>\n              <input type=\"submit\" value=\"Create bouquet!\"/>\n            </form>\n            <div className=\"bouquet-list\" id=\"bouquet-list\">\n              <h3>Your Bouquets:</h3>\n              {bouquets ? bouquets.map(item=> {\n                return(\n                  \n                    <Link to=\"/add-flowers\"><button onClick={()=>{selectBouquet(item)}}>{item.name}</button></Link>\n                )\n              })\n              : null}\n            </div>\n          </section>\n        {bouquetId ?\n        <Route path=\"/add-flowers\" render={()=> <FlowerShop bouquetId={bouquetId} bouquetName={bouquetName} />}/> :\n        null}\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}